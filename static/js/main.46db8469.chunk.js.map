{"version":3,"sources":["components/Box.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","id","className","nameClass","onClick","value","Board","boardStyle","margin","textAlign","width","historyStyle","rootDiv","display","historyDiv","historyButtons","gameSetting","state","squares","Array","fill","history","xIsNext","play_with_bot","game_start","difficulty","i","this","length","slice","calculateWinner","setState","concat","setInterval","randomIndex","botAvailableMove","handleClick","filter_index","map","index","filter","Math","floor","random","splice","game_state","lines","a","b","c","ev","target","checked","currentTarget","status","winner","game_history","style","handleHistory","disabled","handleGoToButtons","game_difficulty","type","name","onChange","handleGameDifficulty","htmlFor","handlePlayWithBot","renderBox","Component","Game","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46db8469.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Box.css'\r\n\r\nconst Box = (props) => {\r\n    return (\r\n        <div id={props.id} className={props.nameClass} \r\n            onClick={()=>{props.onClick()}}>\r\n            <span className=\"board-span\">{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Box","import React, { Component } from 'react'\r\nimport Box from './Box';\r\n\r\nexport class Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            history: [\r\n                {\r\n                    squares: Array(9).fill(null)\r\n                }\r\n            ],\r\n            xIsNext: true,\r\n            play_with_bot: false,\r\n            game_start: false,\r\n            difficulty: 'easy'\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.history[this.state.history.length - 1].squares.slice();\r\n        if (this.calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : '0';\r\n        this.setState({\r\n            squares: squares,\r\n            history: this.state.history.concat({ squares: squares }),\r\n            xIsNext: !this.state.xIsNext,\r\n            game_start: true\r\n        }, () => {\r\n            setInterval(() => {\r\n                // bot next move.\r\n                if (this.state.play_with_bot && !this.state.xIsNext) {\r\n                    let randomIndex = this.botAvailableMove()\r\n                    this.handleClick(randomIndex)\r\n                }\r\n            }, 1000)\r\n\r\n        });\r\n    }\r\n\r\n    botAvailableMove() {\r\n        let available_index = this.state.squares.map((value, index) => {\r\n            if (!value) { return index }\r\n            else { return false }\r\n        })\r\n\r\n        let filter_index = available_index.filter((value) => {\r\n            if (value === 0 || value) return true\r\n        })\r\n\r\n        let randomIndex = filter_index[Math.floor(Math.random() * filter_index.length)];\r\n\r\n        return randomIndex\r\n    }\r\n\r\n    handleHistory(index) {\r\n        this.state.history.splice(index + 1)\r\n        this.setState({\r\n            history: this.state.history,\r\n            xIsNext: index % 2 !== 0 ? false : true,\r\n            game_start: index === 0 ? false : true\r\n        })\r\n    }\r\n\r\n    renderBox(i, nameClass) {\r\n        let game_state = this.state.history[this.state.history.length - 1].squares;\r\n        return <Box id={i} nameClass={nameClass} value={game_state[i]}\r\n            onClick={() => { this.handleClick(i) }} />;\r\n    }\r\n\r\n    boardStyle = {\r\n        margin: '5% 0% 0% 0%',\r\n        textAlign: 'center',\r\n        width: '60%',\r\n    }\r\n\r\n    historyStyle = {\r\n        margin: '5% 0% 0% 0%',\r\n        textAlign: 'center',\r\n    }\r\n\r\n    rootDiv = {\r\n        display: 'flex'\r\n    }\r\n\r\n    historyDiv = {\r\n        display: 'grid'\r\n    }\r\n\r\n    historyButtons = {\r\n        margin: '0px 0px 5px 0px'\r\n    }\r\n\r\n    gameSetting = {\r\n        width: '20%',\r\n        textAlign: 'center',\r\n        margin: '5% 0% 0% 0%',\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handlePlayWithBot(ev) {\r\n        this.setState({\r\n            play_with_bot: ev.target.checked\r\n        })\r\n    }\r\n\r\n    handleGameDifficulty(ev) {\r\n        this.setState({\r\n            difficulty: ev.currentTarget.id\r\n        })\r\n    }\r\n\r\n    handleGoToButtons(index){\r\n        if(this.state.play_with_bot){\r\n            if(index % 2 !== 0 ? false : true)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const winner = this.calculateWinner(this.state.history[this.state.history.length - 1].squares.slice());\r\n        let status;\r\n        if (winner) {\r\n            status = 'winner is ' + winner;\r\n        }\r\n        else if (this.state.history.length === 10) {\r\n            status = 'Game Draw !!!!'\r\n        }\r\n        else {\r\n            status = 'Player ' + (this.state.xIsNext ? 'X' : '0') + ' turn'\r\n        }\r\n\r\n        const game_history = this.state.history.map((history, index) => {\r\n            if (index === 0) {\r\n                return <button key={index} style={this.historyButtons} onClick={() => this.handleHistory(index)}>Go to Game Start</button>\r\n            }\r\n            else {\r\n                return <button key={index} style={this.historyButtons} \r\n                disabled={this.handleGoToButtons(index)}\r\n                onClick={() => this.handleHistory(index)}>Go to Move : {index}</button>\r\n            }\r\n        })\r\n\r\n        let game_difficulty = ''\r\n        if (this.state.play_with_bot) {\r\n            game_difficulty = <>\r\n                <h5>Select difficulty</h5>\r\n\r\n                <input type=\"radio\" name=\"gameDifficulty\" id=\"easy\" checked={this.state.difficulty === 'easy'}\r\n                    onChange={(ev) => this.handleGameDifficulty(ev)} disabled={this.state.game_start}></input>\r\n                <label htmlFor=\"easy\">Easy</label>\r\n\r\n                <input type=\"radio\" name=\"gameDifficulty\" id=\"medium\" checked={this.state.difficulty === 'medium'}\r\n                    onChange={(ev) => this.handleGameDifficulty(ev)} disabled={this.state.game_start}></input>\r\n                <label htmlFor=\"medium\">Medium</label>\r\n\r\n                <input type=\"radio\" name=\"gameDifficulty\" id=\"hard\" checked={this.state.difficulty === 'hard'}\r\n                    onChange={(ev) => this.handleGameDifficulty(ev)} disabled={this.state.game_start}></input>\r\n                <label htmlFor=\"hard\">Hard</label>\r\n            </>\r\n        }\r\n\r\n        return (\r\n            <div style={this.rootDiv}>\r\n                <div style={this.gameSetting}>\r\n                    <h3>Game Setting</h3>\r\n                    <input id=\"play_with_bot\" type=\"checkbox\" disabled={this.state.game_start} checked={this.state.play_with_bot} onChange={(ev) => this.handlePlayWithBot(ev)} />\r\n                    <label htmlFor=\"play_with_bot\">Play with bot</label>\r\n                    {game_difficulty}\r\n                </div>\r\n                <div id=\"container\" style={this.boardStyle}>\r\n                    <h2>{status}</h2>\r\n                    <div className=\"block\">\r\n                        {this.renderBox(0, \"box top left\")}\r\n                        {this.renderBox(1, \"box top middle\")}\r\n                        {this.renderBox(2, \"box top right\")}\r\n                    </div>\r\n                    <div className=\"block\">\r\n                        {this.renderBox(3, \"box left\")}\r\n                        {this.renderBox(4, \"box middle\")}\r\n                        {this.renderBox(5, \"box right\")}\r\n                    </div>\r\n                    <div className=\"block\">\r\n                        {this.renderBox(6, \"box bottom left\")}\r\n                        {this.renderBox(7, \"box bottom middle\")}\r\n                        {this.renderBox(8, \"box bottom right\")}\r\n                    </div>\r\n                </div>\r\n                <div style={this.historyStyle}>\r\n                    <h3>History</h3>\r\n                    <div style={this.historyDiv}>\r\n                        {game_history}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board\r\n\r\n","import React, { Component } from 'react'\r\nimport { Board } from './Board'\r\n\r\nexport class Game extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Board />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game\r\n\r\n","import './App.css';\nimport { Game } from './components/Game';\n\nfunction App() {\n  return (<>\n    <Game />\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}